diff --git a/available_classes.js b/available_classes.js
index cf57122..a304a52 100644
--- a/available_classes.js
+++ b/available_classes.js
@@ -39,6 +39,7 @@ connection.query(groupQuery, function(err, rows, fields){
             available_classes[hash][rows[j].group_id] = {};
             available_classes[hash][rows[j].group_id]["deleted"] = false;
             available_classes[hash][rows[j].group_id]["students"] = [];
+            available_classes[hash][rows[j].group_id]["colors"] = "";
         }
     }
 });
diff --git a/create_database.js b/create_database.js
index abd4953..356b0f9 100644
--- a/create_database.js
+++ b/create_database.js
@@ -45,6 +45,7 @@ connection.query('\
                  `group_id` INT UNSIGNED NOT NULL, \
                  `class_id` INT UNSIGNED NOT NULL, \
                  `date_created` DATETIME DEFAULT CURRENT_TIMESTAMP, \
+                 `group_color` VARCHAR(40), \
                  PRIMARY KEY (`group_id`, `class_id`), \
                  FOREIGN KEY (`class_id`) REFERENCES `'+ dbconfig.database +'`.`'+dbconfig.class_table+'`(class_id) \
                  ON DELETE CASCADE \
diff --git a/database_actions.js b/database_actions.js
index b95b3d1..b62dfae 100644
--- a/database_actions.js
+++ b/database_actions.js
@@ -146,9 +146,10 @@ exports.create_class = function(class_name, group_count, admin_id) {
 }
 
 // Creates a group belonging to the class found using class_name
-exports.create_group = function(class_id) {
+exports.create_group = function(class_id, group_color) {
     var deferred = Q.defer();
 
+
     pool.getConnection(function(error, connection) {
 
         var query = "USE " + dbconfig.database + ";";
@@ -172,8 +173,9 @@ exports.create_group = function(class_id) {
                 else {
                     group = 1;
                 }
-                query = "INSERT INTO " + dbconfig.group_table + " (group_id, class_id) VALUES (?, ?);";
-                connection.query(query, [group, class_id]);
+                query = "INSERT INTO " + dbconfig.group_table + " (group_id, class_id, group_color) VALUES (?, ?, ?);";
+                console.log(group_color);
+                connection.query(query, [group, class_id, group_color]);
                 
                 deferred.resolve(group);
             }
@@ -368,6 +370,30 @@ exports.get_toolbars = function(class_id){
     return deferred.promise;
 }
 
+//Returns the TOOLBARS and their hashed IDs (from the Class table)
+exports.get_group_color = function(class_id, group_id){
+    var deferred = Q.defer();
+    
+    pool.getConnection(function(error, connection) {
+
+        var query = "USE " + dbconfig.database + ";";
+        connection.query(query);
+
+        query = "SELECT group_color FROM " + dbconfig.group_table + " WHERE class_id=? AND group_id=?;" ;
+        connection.query(query, [class_id, group_id], function(error, rows) {
+            if(error) {
+                deferred.reject(error);
+            }
+            else {
+                deferred.resolve(rows);
+            }
+        });
+        connection.release();
+    });
+
+    return deferred.promise;
+}
+
 exports.check_user = function(username, password){
     var deferred = Q.defer();
 
diff --git a/server_sockets.js b/server_sockets.js
index acbf3e5..95d4193 100644
--- a/server_sockets.js
+++ b/server_sockets.js
@@ -380,14 +380,15 @@ function join_class(class_id) {
 // If valid, create a group for the given class in the database and return all
 // the groups in the class. A new group entry for the class is also made in the
 // global datastructure.
-function create_group(class_id) {
+function create_group(class_id, group_color) {
     var deferred = Q.defer();
 
+    
     hash.find_id(class_id)
     .then(function(unhashed_id) {
-        return database.create_group(unhashed_id);
+        return database.create_group(unhashed_id, group_color);
     }).then(function(group_id) {
-        classes.available_classes[class_id][group_id] = {students:[], deleted:false};
+        classes.available_classes[class_id][group_id] = {students:[], deleted:false, colors:group_color};
         return get_all_groups_from_class(class_id);
     }).then(function(groups) {
         deferred.resolve(groups);
@@ -429,7 +430,6 @@ function create_toolbar(class_id, toolbar_name, tools) {
 function create_admin(username, password) {
     var deferred = Q.defer();
 
-console.log("in create-admin");
     database.create_user(username, password)
     .then(function(admin) {
         
@@ -463,6 +463,26 @@ function get_toolbars(class_id) {
     return deferred.promise;
 }
 
+// Takes a class id and group_id.
+// If invalid, returns an error.
+// If valid return 
+// the colors of the group.
+
+function group_color(class_id, group_id) {
+    var deferred = Q.defer();
+
+    hash.find_id(class_id)
+    .then(function(unhashed_id) {
+        return database.get_group_color(unhashed_id, group_id);
+    }).then(function(toolbars) {
+        deferred.resolve(toolbars);
+    }).fail(function(error) {
+        deferred.reject(error);
+    });
+
+    return deferred.promise;
+}
+
 // Takes username and get password
 
 function check_username(username) {
@@ -914,7 +934,8 @@ function server_sockets(server, client){
                 logger.info(date + "~" + username + "~xml_change~" + class_id + "~" + group_id + "~" 
                             + JSON.stringify(response)  + "~1~" + class_id + "x" + group_id );
                 socket.broadcast.to(class_id + "x" + group_id).emit('xml_change_response', response);
-                io.sockets.to('admin-' + class_id).emit('xml_change_response', response);
+                io.sockets.to('admin-' + class_id, response).emit('xml_change_response', response);
+                //socket.emit('xml_change_response', response);
             }).fail(function(error){
                 server_error(error, error);
             });
@@ -975,7 +996,6 @@ function server_sockets(server, client){
             class_name = sanitize_data(class_name);
             group_count = sanitize_data(group_count);
             secret = sanitize_data(secret);
-            console.log(admin_id);
 
             if (secret == "ucd_247") {
                 create_class(class_name, group_count, admin_id)
@@ -1120,13 +1140,13 @@ function server_sockets(server, client){
         // It calls a database function to create a group for a class
         // Emits add-group-response to socket that triggered add-group
         // Emits groups_get_response to all sockets in the class room
-        socket.on('add-group', function(class_id, secret) {
+        socket.on('add-group', function(class_id, secret ,colors) {
             class_id = sanitize_data(class_id);
             secret = sanitize_data(secret);
-
+            var group_color = colors.join('-'); //Creating the string to be passed in the sql database as group_color
 
             if (secret == "ucd_247") {
-                create_group(class_id)
+                create_group(class_id, group_color)
                 .then(function(groups) {
                     var response = {
                         username : "Admin",
@@ -1145,6 +1165,25 @@ function server_sockets(server, client){
             }
         }); 
 
+        // GROUP-COLOR
+        // This is the handler for the color-group client socket emission
+        // It calls a database function to get and set the color for a group
+        // Emits group-color-response to socket that triggered add-group
+        socket.on('group-color', function(class_id, group_id) {
+            class_id = sanitize_data(class_id);
+            group_id = sanitize_data(group_id);
+
+            group_color(class_id, group_id)
+            .then(function(colors) {
+
+                socket.emit('group-color-response', colors);
+                //io.sockets.to(class_id + "x").emit('add-group-response', {});
+
+            }).fail(function(error) {
+                server_error(error, error);
+            });
+        }); 
+
 
         // ADD-TOOLBAR
         // This is the handler for the add-toolbar client socket emission
@@ -1206,7 +1245,6 @@ function server_sockets(server, client){
         socket.on('delete-toolbar', function(class_id, toolbar_name) {
             class_id = sanitize_data(class_id);
 
-            console.log("delete-toolbar");
             delete_toolbar(class_id, toolbar_name)
             .then(function(toolbars) {
 
@@ -1360,7 +1398,6 @@ function server_sockets(server, client){
             secret = sanitize_data(secret);
             username = sanitize_data(username);
             password = sanitize_data(password);
-            console.log("hello");
 
             if (secret == "ucd_247") {
                 check_username(username)
